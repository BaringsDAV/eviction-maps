
@import '../../../theme';

// Card Typography Mixins
// ----
// Default style for card headings
@mixin cardHeading($size) {
  @include defaultFontBold($size);
  letter-spacing: 0.37px;  
  line-height: 1.16666;
  text-transform: capitalize;
}
// Overrides for heading in data panel
@mixin panelCardHeading($size) {
  @include altFont($size);
  letter-spacing: 0.5px;  
  line-height: 1.16666;
  text-transform: uppercase;
}

// Base Card Styles
// ----
.location-card {
  pointer-events: all;
  background: $cardBg;
  box-shadow: $z1shadow;
  position:relative;
  width: 100%;
  z-index: 20;
  &:nth-child(2) { z-index: 19; }
  &:nth-child(3) { z-index: 18; }
  &:nth-child(4) { z-index: 17; }
  .card-header {
    svg { display: none; } // hide marker by default
    position:relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-end;
    padding: $defaultPadding;
    color: $cardHeaderBg1;
    border-bottom: grid(1) solid transparent;
    height: $cardHeaderHeight;
    padding-right: grid(6);
    &.clickable { cursor: pointer; }
    &.clickable:hover { background: $shadingColor; }
  }
  .card-heading { 
    margin: 0; 
    @include cardHeading(18px);
  }
  .card-subheading {
    margin: grid(0.5) 0 0 0;     
    @include smallCapsText(12px);
  }
  .btn-close { 
    position:absolute;
    top: 0px;
    right: 0px;
    background: none; 
    color: $cardLabelText;
    &:hover { color: $color1; }
  }
  // set colors for cards
  &:nth-child(1) .card-header {
    border-bottom-color: $cardHeaderBg1;
    path { fill: $cardHeaderBg1; }
  }
  &:nth-child(2) .card-header { 
    border-bottom-color: $cardHeaderBg2; 
    .card-heading, .card-subheading { color: $cardHeaderBg2; }
    path { fill: $cardHeaderBg2; }
  }
  &:nth-child(3) .card-header { 
    border-bottom-color: $cardHeaderBg3; 
    .card-heading, .card-subheading { color: $cardHeaderBg3; }
    path { fill: $cardHeaderBg3; }
  }
  &:nth-child(4) .card-header { 
    border-bottom-color: $cardHeaderBg4; 
    .card-heading, .card-subheading { color: $cardHeaderBg4; }
    path { fill: $cardHeaderBg4; }
  }
  .card-content {
    padding: $defaultPadding;
    .card-stats { 
      margin:0; 
      padding:0; 
      list-style:none; 
    }
    .card-stats li { margin-bottom: grid(1); }
    .card-stats li:last-child { margin-bottom: 0;}
    .card-stat-label {
      display:block;       
      color: $cardLabelText;
      font-size: 12px;
    }
    .card-stat-value {
      @include numberFont(14px);
      color: $cardValueText;
    }
  }
}

// default mobile styles for map cards
:host-context(.map-ui-wrapper) {
  box-shadow: $z1shadow;
  // location cards fill most of the viewport width
  .location-card {
    min-width: 75vw;
    // align location text at top of card header
    .card-header {
      justify-content: flex-start;
    }
    // overlay the card content at the bottom of the header
    .card-content { 
      position:absolute;
      bottom:0;
      left:0;
      padding: grid(1) 0 grid(1) grid(2);
      li { float:left; margin-right: grid(2); }
      li:last-child { margin-right: 0; }
      // hide the second stat (raw evictions) when there is a selected choropleth
      li:nth-child(2) { display:none; }
      // show the second stat if there is no selected choropleth
      li:nth-child(2):last-child { display: block; }
    }
  }
}

// display all three data attributes in card when space permits
@media(min-width: 380px) {
  :host-context(.map-ui-wrapper) {
    .location-card {
      .card-content { 
        li:nth-child(2) { display: block; } 
      }
    }
  }
}
// split cards across viewport on devices larger than mobile 
.gt-mobile .map-ui-wrapper :host-context {
  .location-card { 
    width: 100%; 
    min-width: $cardWidth; 
  }
}
// tablet and larger displays:
.gt-tablet .map-ui-wrapper :host-context {
  box-shadow:none;
  // drop card width
  .location-card {
    width: $cardWidth;
    // align header text at the bottom of the header
    .card-header {
      justify-content: flex-end; 
    }
    // increase font sizes
    .card-heading { 
      @include cardHeading($cardHeadingSize);
    }
    .card-subheading {
      margin: grid(1) 0 0 0;     
      @include smallCapsText($cardSubheadingSize);
    }
    // stacked statistics
    .card-content {
      position: static;
      padding: $defaultPadding;
      li { float: none; margin-right: 0; }
      .card-stat-label {
        font-size: $cardLabelTextSize;
      }
      .card-stat-value {
        @include numberFont($cardValueTextSize);
      }
    }
  }
}

// Location cards in the data panel
// ----
//  - switch from box shadows to borders
//  - table-like stat labels and values
//  - switch header style and add marker
//  - first 2 stats have alternate treatment
//  - stat groups
//  - additional "card" for addign a location
:host-context(.data-wrapper) {
  margin:0;
  overflow:auto;
  padding:0px grid(4) grid(5);
  .location-card {
    min-width: grid(32);
    width: 100%;
    box-shadow:none;
    margin-right: grid(2);
    &:last-child { margin-right: 0; }
    // marker icon
    .card-header svg { 
        display:block; 
        width: 28px; 
        height: 40px;
        position:absolute;
        top:12px;
        bottom:0;
        left:0;
        margin:auto;
    }
    .card-heading { 
      @include panelCardHeading($panelCardHeadingSize);
      margin-left: grid(4);
    }
    .card-subheading { 
      font-size: $panelCardSubheadingSize;
      margin-left: grid(4);
      margin-bottom: grid(1);
    }
    .card-content { 
      position:relative; 
      border: 1px solid $panelCardBorder;
      padding:0;
    }
    .btn-close {
      top: auto;
      bottom: grid(5);
    }
    .card-stats { padding-top: grid(12); }
    .card-stats li {
      .card-stat-value { color: $panelCardValueText; }
      .card-stat-label { color: $panelCardLabelText; }
      // first two stats
      &:nth-child(1), &:nth-child(2) {
        position:absolute;
        width:50%;
        top:0;
        left:0;
        height: grid(12);
        border-bottom:1px solid $panelCardBorder;
        text-align:center;
        display:flex;
        flex-direction: column-reverse;
        justify-content: center;
        align-items: center;
        .card-stat-label {
          @include defaultFontBold($panelCardLabelTextLg);
          text-transform: uppercase;
          letter-spacing:0.5px;
        }
        .card-stat-value {
          @include numberFont($panelCardLabelValueLg);
        }
      }
      &:nth-child(2) {
        right:0;
        left:auto;
        border-left: 1px solid $panelCardBorder;
      }
      // all other stats
      &:nth-child(n+3) {
        text-align:left;
        padding: grid(1) $defaultPadding;
        margin-bottom:0;
        display: flex;
        align-items: stretch;
        justify-content: space-between;
        &:nth-child(odd) { 
          background: $secondaryBackground;
        }
        .card-stat-label { 
          width: 60%;
          font-size: $panelCardStatTextSize;
        }
        .card-stat-value {
          width: 33.333%;
          text-align:left;
          font-size: $panelCardStatTextSize;
        }
      }
    }
    &.location-add {
      position:relative;
      .card-header { border-bottom-color: $secondaryBackground; }
      .card-content {
        border:none;
        position:absolute;
        top: $cardHeaderHeight;
        bottom:0;
        left:0;
        right:0;
        width:100%;
        padding: $defaultPadding*2;
        background: $secondaryBackground;
        display:flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        p {
          @include defaultFontBold($cardAddLocationTextSize);
          margin: $defaultPadding 0;
        }
      }
      app-location-search { width: 100%;}
    } 
  }
}

// Larger than tablet in data panel
// ----
//  - Boost font sizes
//  - Adjust margins / padding
//  - No horizontal overflow on wrapper
// ----
// Workaround for multiple host contexts below
// https://github.com/angular/angular/issues/19199
.gt-tablet .data-wrapper :host-context {
  overflow:none;
  max-width: $maxContentWidth;
  margin: auto;
  padding: 0 grid(4) grid(6);
  .location-card {
    margin-right: grid(4);
    min-width: grid(34);
    flex:1;
    &:last-child { margin-right: 0; }
    .card-header svg {
      top:0;
      width: 40px; 
      height: 58px;
    }
    .card-heading { 
      font-size: 26px; 
      margin-left: grid(6);
    }
    .card-subheading { 
      margin-left: grid(6); 
    }
    .btn-close {
      bottom: 44px;
      font-size: 32px;
    }
    .card-stats { 
      padding-top: grid(13); 
      li:nth-child(1),
      li:nth-child(2) {
        height: grid(13);
        .card-stat-label { font-size: $panelCardLabelTextLg_t; }
        .card-stat-value { font-size: $panelCardLabelValueLg_t; }
      }
      li:nth-child(n+3) { 
        padding: grid(1.5) $defaultPadding; 
        .card-stat-label,
        .card-stat-value { font-size: $panelCardStatTextSize_t; }
      }
    }
    &.location-add .card-content p {
      font-size: $cardAddLocationTextSize_t;
    }
  }
}