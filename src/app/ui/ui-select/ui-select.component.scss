@import '../../../theme';

@mixin ui-select-colors($text, $background, $labelText, $highlightBackground, $highlightText, $caretColor) {
  .el-select {
      .dropdown-toggle.btn { 
          color: $text;
          background: $background;
      }
      .el-select-label { color: $labelText; }
      .highlighted { background: $highlightBackground; color: $highlightText; }
      .caret { color: $caretColor; }
  }
}

:host {
  @include ui-select-colors($selectText,$selectBackground,$selectLabelText,$selectHighlightBackground,$selectHighlightText,$selectCaret);
  box-shadow: $z1shadow;
  &:focus {
    @include focusState();
  }
}

.el-select {
  width: auto;
  display:block;
  position:relative;
  .el-select-label {
    @include defaultFont(13px);
    text-transform: uppercase;
    letter-spacing: 0.7px;
  }
  .el-select-value {
    font-size: 13px;
  }
  .dropdown-menu {
    border-radius: 0;
    border: none;
    margin-top: 1px;
    width: 100%;
    box-sizing: border-box;
    min-width: grid(18);
    max-height: grid(28); // prevent dropdown menu from going off screen
    padding:0;
    overflow: auto;
    & > li > a {
      padding: $defaultPadding;
      border-top: 1px solid $shadingColor;
      min-height: grid(5);
      white-space: normal;
      box-sizing: border-box;
    }
    & li:first-child a { border-top: none; }
    & > li, & > li > a {
      cursor: pointer;
    }
    & > li.bottom-label, & > li.bottom-label > a {
      font-style: italic;
      color: rgba(0, 0, 0, 0.5);
      cursor: inherit;
    }
    & > li.bottom-label:hover, & > li.bottom-label > a:hover {
      background: inherit;
    }
  }
  .dropdown-toggle.btn {
    height: grid(6);
    padding: grid(1) grid(4) grid(1) grid(2);
    position:relative;
    border:none;
    border-radius: 0;
    text-transform: uppercase;
    @include smallCapsText(13px);
    width:100%;
    text-align:left;
    .svg-down-arrow {
      position:absolute;
      right:grid(1);
      top:0px;
      bottom:0;
      width:14px;
      height: grid(1);
      margin:auto;
      polyline {
        stroke: $selectCaret;
        stroke-width: 2px;
        fill:none;
      }
    }
  }
}
// more space for dropdown menus
:host-context(.gt-mobile) {
  .el-select .dropdown-menu { max-height: 300px; }
}

// OVERRIDES

// Vertical treatment with arrow on bottom
:host-context(.vertical-select) {
  .el-select .dropdown-toggle.btn {
    height:grid(7);
    padding: 6px 12px;
    text-align: center;
    span {
      position: relative;
      top: -7px;
    }
    .svg-down-arrow {
      top:auto;
      left: 0;
      bottom: 11px;
      right: 0;
      margin: auto;
    }
  }
}

// 1px border and no drop shadow when in header
:host-context(.header-content) {
  .el-select .dropdown-toggle.btn {
    padding-right: grid(1.5)!important; // never want to add padding for down arrow
    .svg-down-arrow {
      right: 0!important; // never want to reposition down arrow
    }
  }
}

:host-context(.z0) {
  border: 1px solid $shadingColor;
  box-shadow: none;
  // need to explicitly set focus state for z0 because box shadow is cleared
  &:focus {
    @include focusState();
  }
}

:host-context(.gt-tablet) {
  .el-select .el-select-label,
  .el-select .el-select-value {
    font-size: 14px;
  }
  .el-select .dropdown-toggle.btn {
    padding-right: grid(5);
    .svg-down-arrow {
      right: grid(2);
    }
  }
}